 
CREATE TABLE DeeperLifeDCMembers2 AS SELECT ID, FirstName, LatestAttendance FROM DeeperLifeDCMembers;
DROP TABLE EmployeeDetails;
SELECT * FROM DeeperLifeDCMembers;

CREATE TABLE EmployeeDetails(EmpID INT PRIMARY KEY NOT NULL, FullName VARCHAR(30), ManagerID INT, DateOfJoining DateTime);
INSERT INTO EmployeeDetails(EmpID, FullName, ManagerID, DateOfJoining)
VALUES(121, 'John Snow', 321, '01/31/2014');
INSERT INTO EmployeeDetails(EmpID, FullName, ManagerID, DateOfJoining)
VALUES(321, 'Walter White', 986, '01/30/2015');
INSERT INTO EmployeeDetails(EmpID, FullName, ManagerID, DateOfJoining)
VALUES(421, 'Kuldeep Rana', 876, '11/27/2016');

CREATE TABLE EmployeeSalary(EmpID INT FOREIGN KEY REFERENCES EmployeeDetails(EmpID), Project VARCHAR(5), Salary SMALLMONEY);
INSERT INTO EmployeeSalary(EmpID, Project, Salary)
VALUES(121, 'P1', 8000);
INSERT INTO EmployeeSalary(EmpID, Project, Salary)
VALUES(321, 'P2', 1000);
INSERT INTO EmployeeSalary(EmpID, Project, Salary)
VALUES(421, 'P1', 12000);

--1 SQL query to fetch the count of employees working in project 'P1'.
SELECT COUNT(Project) AS EmployeesInP1 FROM EmployeeSalary
WHERE Project = 'P1';

--2 SQL query to fetch employee names having salary greater than or equal to 5000 and less than or equal 10000.
SELECT e.FullName AS EmployeeName 
FROM EmployeeDetails e
INNER JOIN EmployeeSalary s
ON e.EmpID = s.EmpID
WHERE s.Salary BETWEEN 5000 AND 10000;

--3 SQL query to fetch project-wise count of employees sorted by project's count in descending order
SELECT COUNT(Project) AS ProjectCount
FROM EmployeeSalary
ORDER BY ProjectCount DESC;

--5 SQL query to fetch employee names and salary records. Return employee details even if the salary record is not present for the employee
SELECT e.EmpID, e.FullName, s.Salary 
FROM EmployeeDetails e
LEFT JOIN EmployeeSalary s
ON e.EmpID = s.EmpID;

--6 SQL query to fetch all the Employees who are also managers from EmployeeDetails table.
SELECT e.EmpID, e.FullName
FROM EmployeeDetails e
INNER JOIN EmployeeDetails m
ON E.EmpID = M.ManagerID;

--7 SQL query to fetch all employee records from EmployeeDetails table who have a salary record in EmployeeSalary table.
SELECT e.*
FROM EmployeeDetails e
INNER JOIN EmployeeSalary s
ON e.EmpID = s.EmpID;

--8 SQL query to fetch duplicate records from a table
SELECT Project FROM EmployeeSalary;

--9 SQL query to remove duplicates from a table without using temporary table
SELECT DISTINCT Project FROM EmployeeSalary;

--10. Statement that fetches Odd rows
SELECT * FROM EmployeeSalary
WHERE EmpID % 2 != 0;

--11. Statement that fetches even rows
SELECT * FROM EmployeeSalary
WHERE EmpID % 2 = 0;

--16. SQL query to find current date-time
SELECT GETDATE();

--17 SQL query to fetch all the Employees details from EmployeeDetails table who joined in Year 2016.
SELECT * FROM EmployeeDetails 
WHERE YEAR(DateOfJoining) = 2016;

--18. SQL query to fetch top n records
SELECT TOP(10) * FROM DiligentFabrique;

--19. SQL query to find the nth highest salary from table
SELECT EmpID, Project, Salary FROM EmployeeSalary
ORDER BY Salary DESC
OFFSET n-1 ROWS
FETCH NEXT 1 ROW ONLY;

--20.SQL query to find the 3rd highest salary from table without using TOP/limit keyword.
SELECSELECT EmpID, Project, Salary FROM EmployeeSalary
ORDER BY Salary DESC
OFFSET 2 ROWS
FETCH NEXT 1 ROW ONLY;
